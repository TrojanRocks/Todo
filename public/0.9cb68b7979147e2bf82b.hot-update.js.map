{"version":3,"sources":["webpack:///./src/components/todos-list-item.js?e209"],"names":["TodosListItem","props","state","isEditing","task","isCompleted","taskStyle","color","cursor","toggleTask","bind","deleteTask","renderTaskSection","renderActionsSection","setState","event","preventDefault","oldTask","newTask","refs","editInput","value","saveTask","Component"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;KAEqBA,a;;;AACjB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA,mIACTA,KADS;;AAGf,eAAKC,KAAL,GAAa;AACTC,wBAAW;AADF,UAAb;AAHe;AAMlB;;;;6CAEmB;AAAA,0BACc,KAAKF,KADnB;AAAA,iBACRG,IADQ,UACRA,IADQ;AAAA,iBACFC,WADE,UACFA,WADE;;;AAGhB,iBAAMC,YAAY;AACdC,wBAAOF,cAAc,OAAd,GAAwB,KADjB;AAEdG,yBAAQ;AAFM,cAAlB;;AAMA,oBACI;AAAA;AAAA,mBAAI,OAAOF,SAAX;AACI,8BAAS,KAAKL,KAAL,CAAWQ,UAAX,CAAsBC,IAAtB,CAA2B,IAA3B,EAAiCN,IAAjC;AADb;AAGKA;AAHL,cADJ;AAOH;;;gDAEsB;;AAEnB,oBACI;AAAA;AAAA;AACI;AAAA;AAAA,uBAAQ,SAAS,KAAKH,KAAL,CAAWU,UAAX,CAAsBD,IAAtB,CAA2B,IAA3B,EAAiC,KAAKT,KAAL,CAAWG,IAA5C,CAAjB;AAAA;AAAA;AADJ,cADJ;AAKH;;;kCAEQ;AACL,oBACI;AAAA;AAAA;AACK,sBAAKQ,iBAAL,EADL;AAEI,+CAAC,iBAAD,OAFJ;AAGK,sBAAKC,oBAAL;AAHL,cADJ;AAOH;;;yCAGe;AACZ,kBAAKC,QAAL,CAAc,EAAEX,WAAW,KAAb,EAAd;AACH;;;qCAEWY,K,EAAO;AACfA,mBAAMC,cAAN;;AAEA,iBAAMC,UAAU,KAAKhB,KAAL,CAAWG,IAA3B;AACA,iBAAMc,UAAU,KAAKC,IAAL,CAAUC,SAAV,CAAoBC,KAApC;AACA,kBAAKpB,KAAL,CAAWqB,QAAX,CAAoBL,OAApB,EAA6BC,OAA7B;AACA,kBAAKJ,QAAL,CAAc,EAAEX,WAAW,KAAb,EAAd;AACH;;;;GA1DsC,gBAAMoB,S;;mBAA5BvB,a","file":"0.9cb68b7979147e2bf82b.hot-update.js","sourcesContent":["import React from 'react';\n\nexport default class TodosListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isEditing: false\n        };\n    }\n\n    renderTaskSection() {\n        const { task, isCompleted } = this.props;\n\n        const taskStyle = {\n            color: isCompleted ? 'green' : 'red',\n            cursor: 'pointer'\n        };\n        \n        \n        return (\n            <td style={taskStyle}\n                onClick={this.props.toggleTask.bind(this, task)}\n            >\n                {task}\n            </td>\n        );\n    }\n\n    renderActionsSection() {\n       \n        return (\n            <td>\n                <button onClick={this.props.deleteTask.bind(this, this.props.task)}>Delete</button>\n            </td>\n        );\n    }\n\n    render() {\n        return (\n            <tr>\n                {this.renderTaskSection()}\n                <TodoActionSection />\n                {this.renderActionsSection()}\n            </tr>\n        );\n    }\n\n\n    onCancelClick() {\n        this.setState({ isEditing: false });\n    }\n\n    onSaveClick(event) {\n        event.preventDefault();\n\n        const oldTask = this.props.task;\n        const newTask = this.refs.editInput.value;\n        this.props.saveTask(oldTask, newTask);\n        this.setState({ isEditing: false });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/todos-list-item.js"],"sourceRoot":""}