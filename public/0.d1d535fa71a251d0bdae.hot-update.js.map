{"version":3,"sources":["webpack:///./src/components/todos-list-item.js?e209"],"names":["TodosListItem","props","state","isEditing","task","isCompleted","taskStyle","color","cursor","textDecoration","toggleTask","bind","deleteTask","setState","event","preventDefault","oldTask","newTask","refs","editInput","value","saveTask","Component"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;AACA;;;KAGqBA,a;;;AACjB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA,mIACTA,KADS;;AAGf,eAAKC,KAAL,GAAa;AACTC,wBAAW;AADF,UAAb;AAHe;AAMlB;;;;kCAEQ;AAAA,0BACyB,KAAKF,KAD9B;AAAA,iBACGG,IADH,UACGA,IADH;AAAA,iBACSC,WADT,UACSA,WADT;;AAEL,iBAAMC,YAAY;AACdC,wBAAO,KAAKN,KAAL,CAAWI,WAAX,GAAyB,OAAzB,GAAmC,KAD5B;AAEdG,yBAAQ,SAFM;AAGdC,iCAAgB,CAAC,KAAKR,KAAL,CAAWI,WAAZ,GAA0B,cAA1B,GAA2C;AAH7C,cAAlB;AAKA,oBACI;AAAA;AAAA;AACC;AAAA;AAAA,uBAAI,OAAOC,SAAX;AACG,kCAAS,KAAKL,KAAL,CAAWS,UAAX,CAAsBC,IAAtB,CAA2B,IAA3B,EAAiCP,IAAjC;AADZ;AAGIA;AAHJ,kBADD;AAMI,8EAAmB,MAAM,KAAKH,KAAL,CAAWG,IAApC,EAA0C,aAAa,KAAKH,KAAL,CAAWI,WAAlE,EAA+E,YAAY,KAAKJ,KAAL,CAAWW,UAAtG;AANJ,cADJ;AAUH;;;yCAGe;AACZ,kBAAKC,QAAL,CAAc,EAAEV,WAAW,KAAb,EAAd;AACH;;;qCAEWW,K,EAAO;AACfA,mBAAMC,cAAN;;AAEA,iBAAMC,UAAU,KAAKf,KAAL,CAAWG,IAA3B;AACA,iBAAMa,UAAU,KAAKC,IAAL,CAAUC,SAAV,CAAoBC,KAApC;AACA,kBAAKnB,KAAL,CAAWoB,QAAX,CAAoBL,OAApB,EAA6BC,OAA7B;AACA,kBAAKJ,QAAL,CAAc,EAAEV,WAAW,KAAb,EAAd;AACH;;;;GAxCsC,gBAAMmB,S;;mBAA5BtB,a","file":"0.d1d535fa71a251d0bdae.hot-update.js","sourcesContent":["import React from 'react';\nimport TodoActionSection from './TodoActionSection';\n//import TodoTaskSection from './TodoTaskSection';\n\n\nexport default class TodosListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isEditing: false\n        };\n    }\n\n    render() {\n        const { task, isCompleted } = this.props;\n        const taskStyle = {\n            color: this.props.isCompleted ? 'green' : 'red',\n            cursor: 'pointer',\n            textDecoration: !this.props.isCompleted ? 'line-through' : ''\n        };\n        return (\n            <tr>\n             <td style={taskStyle}\n                onClick={this.props.toggleTask.bind(this, task)}\n            >\n                {task}\n            </td>\n                <TodoActionSection task={this.props.task} isCompleted={this.props.isCompleted} deleteTask={this.props.deleteTask}/>\n            </tr>\n        );\n    }\n\n\n    onCancelClick() {\n        this.setState({ isEditing: false });\n    }\n\n    onSaveClick(event) {\n        event.preventDefault();\n\n        const oldTask = this.props.task;\n        const newTask = this.refs.editInput.value;\n        this.props.saveTask(oldTask, newTask);\n        this.setState({ isEditing: false });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/todos-list-item.js"],"sourceRoot":""}